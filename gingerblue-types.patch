--- gingerblue-6.2.0/src/gingerblue-app.c.orig	2022-09-02 17:30:30.000000000 +0200
+++ gingerblue-6.2.0/src/gingerblue-app.c	2025-08-30 09:53:08.010115421 +0200
@@ -21,10 +21,10 @@ int main_app (gint argc, gchar *argv[])
 	GingerblueData *gingerblue_config;
         GtkWindow *gingerblue_window;
 	gtk_init (&argc, &argv);
-        gingerblue_config = main_config (gingerblue_window, "studios.gingerblue.org");
-	gingerblue_window = gingerblue_main_loop (gingerblue_config);
-	gtk_widget_show_all (gingerblue_window);
-	gst_init(&argc, &argc);
+        gingerblue_config = (GingerblueData *) (main_config (GTK_WIDGET (gingerblue_window), NULL /* not used in 6.2.0: "studios.gingerblue.org" */));
+	gingerblue_window = GTK_WINDOW (gingerblue_main_loop (gingerblue_config));
+	gtk_widget_show_all (GTK_WIDGET (gingerblue_window));
+	gst_init(&argc, &argv);
 	gtk_main();	
 	return (0);
 }
--- gingerblue-6.2.0/src/gingerblue-config.c.orig	2022-09-02 17:30:30.000000000 +0200
+++ gingerblue-6.2.0/src/gingerblue-config.c	2025-08-30 10:15:36.615107547 +0200
@@ -44,23 +44,23 @@ GtkWidget *main_config (GtkWidget *widge
        GtkWidget *StudioLabel;
        GtkContainer *Container;
        GtkWindow *gingerblue;
-       gingerblue = gtk_window_new (GTK_WINDOW_TOPLEVEL);
+       gingerblue = GTK_WINDOW (gtk_window_new (GTK_WINDOW_TOPLEVEL));
        gtk_window_set_title (GTK_WINDOW (gingerblue), g_strconcat(_("Recording ("), gtk_entry_get_text(GTK_ENTRY(computer_entry)), _(") on "), gtk_entry_get_text(GTK_ENTRY(studio_entry)), _(" ("), PACKAGE_STRING, ")", NULL));
-       AddStudioButton = gtk_button_new_with_label(_("Add Studio"));
-       NewStudioButton = gtk_button_new_with_label(_("New Studio"));
-       Studio = gtk_box_new (GTK_ORIENTATION_VERTICAL, 8);
-       Location = gtk_list_box_new ();
-       Computer = gtk_list_box_row_new();
+       AddStudioButton = GTK_BUTTON (gtk_button_new_with_label(_("Add Studio")));
+       NewStudioButton = GTK_BUTTON (gtk_button_new_with_label(_("New Studio")));
+       Studio = GTK_BOX (gtk_box_new (GTK_ORIENTATION_VERTICAL, 8));
+       Location = GTK_LIST_BOX (gtk_list_box_new ());
+       Computer = GTK_LIST_BOX_ROW (gtk_list_box_row_new());
        Studios = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, 0);
        gtk_container_add (GTK_CONTAINER (Computer), Studios);
        StudioLabel = gtk_label_new (gtk_entry_get_text(GTK_ENTRY(computer_entry)));
        gtk_container_add (GTK_CONTAINER (gingerblue), GTK_WIDGET (Studio));
-       gtk_container_add (GTK_CONTAINER (Location), Computer);
-       gtk_box_pack_start (GTK_BOX (Studio), GTK_BUTTON (NewStudioButton), TRUE, TRUE, 0);
+       gtk_container_add (GTK_CONTAINER (Location), GTK_WIDGET (Computer));
+       gtk_box_pack_start (GTK_BOX (Studio), GTK_WIDGET (NewStudioButton), TRUE, TRUE, 0);
        gtk_box_pack_start (GTK_BOX (Studios), StudioLabel, TRUE, TRUE, 0);
        g_signal_connect (GTK_BUTTON(AddStudioButton), "clicked", G_CALLBACK(main_studio_config), gtk_entry_get_text(GTK_ENTRY(computer_entry)));
-       gtk_box_pack_start (GTK_BOX (Studio), GTK_LIST_BOX (Location), TRUE, TRUE, 0);
-       gtk_box_pack_start (GTK_BOX (Studio), GTK_BUTTON (AddStudioButton), TRUE, TRUE, 0);
+       gtk_box_pack_start (GTK_BOX (Studio), GTK_WIDGET (Location), TRUE, TRUE, 0);
+       gtk_box_pack_start (GTK_BOX (Studio), GTK_WIDGET (AddStudioButton), TRUE, TRUE, 0);
        fprintf(stdout, "%s\n", gtk_entry_get_text(GTK_ENTRY(gtk_list_box_get_selected_row(GTK_LIST_BOX(Location)))));
        g_signal_connect (GTK_LIST_BOX(Location), "row-selected", G_CALLBACK(studio_location_selected), gtk_list_box_get_selected_row (GTK_LIST_BOX(Location)));
        g_signal_connect (GTK_BUTTON(NewStudioButton), "clicked", G_CALLBACK(studio_location_selected), gtk_entry_get_text(GTK_ENTRY(computer_entry)));
--- gingerblue-6.2.0/src/gingerblue-main.c.orig	2022-09-02 17:30:30.000000000 +0200
+++ gingerblue-6.2.0/src/gingerblue-main.c	2025-08-30 10:34:17.968701949 +0200
@@ -193,9 +193,9 @@ static void gb_assistant_apply(GtkAssist
         GingerblueData *gingerblue_config;
         GtkWindow *gingerblue_window;
         /* gtk_init (&argc, &argv); */
-        gingerblue_config = main_config (GTK_WIDGET(gingerblue_window), gtk_entry_get_text(GTK_ENTRY(studio_entry)));
-        gingerblue_window = gingerblue_main_loop (gingerblue_config);
-        gtk_widget_show_all (gingerblue_window);
+        gingerblue_config = (GingerblueData *) main_config (GTK_WIDGET(gingerblue_window), NULL /* not used in 6.2.0: gtk_entry_get_text(GTK_ENTRY(studio_entry)) */);
+        gingerblue_window = GTK_WINDOW (gingerblue_main_loop (gingerblue_config));
+        gtk_widget_show_all (GTK_WIDGET (gingerblue_window));
         /* gst_init(&argc, &argc); */
         /* gtk_main(); */
 	gst_element_send_event(data, gst_event_new_eos());
@@ -270,7 +270,7 @@ int main(int argc, char **argv)
 	page[1].widget = gtk_box_new(FALSE, 5);
 	musician_label = gtk_label_new(_("Musician:"));
 	musician_entry = gtk_entry_new();
-	if (g_strcmp0(musician_entry, NULL)!=0) gtk_entry_set_text(GTK_ENTRY(musician_entry), g_get_real_name()); else gtk_entry_set_text(GTK_ENTRY(musician_entry), gtk_entry_get_text(GTK_ENTRY(musician_entry)));
+	if (g_strcmp0(gtk_entry_get_text(GTK_ENTRY(musician_entry)), NULL)!=0) gtk_entry_set_text(GTK_ENTRY(musician_entry), g_get_real_name()); else gtk_entry_set_text(GTK_ENTRY(musician_entry), gtk_entry_get_text(GTK_ENTRY(musician_entry)));
 	gtk_box_pack_start(GTK_BOX(page[1].widget), GTK_WIDGET(musician_label),
 			   FALSE, FALSE, 5);
 	gtk_box_pack_start(GTK_BOX(page[1].widget), GTK_WIDGET(musician_entry),
@@ -278,7 +278,7 @@ int main(int argc, char **argv)
 	page[2].widget = gtk_box_new(FALSE, 5);
 	song_label = gtk_label_new(_("Song:"));
 	song_entry = gtk_entry_new();
-	if (g_strcmp0(song_entry, NULL)!=0) gtk_entry_set_text(GTK_ENTRY(song_entry), g_strconcat (_("Song_-_"), g_date_time_format_iso8601 (datestamp), NULL)); else gtk_entry_set_text(GTK_ENTRY(song_entry), gtk_entry_get_text(GTK_ENTRY(song_entry)));
+	if (g_strcmp0(gtk_entry_get_text(GTK_ENTRY(song_entry)), NULL)!=0) gtk_entry_set_text(GTK_ENTRY(song_entry), g_strconcat (_("Song_-_"), g_date_time_format_iso8601 (datestamp), NULL)); else gtk_entry_set_text(GTK_ENTRY(song_entry), gtk_entry_get_text(GTK_ENTRY(song_entry)));
 	gtk_box_pack_start(GTK_BOX(page[2].widget), GTK_WIDGET(song_label),
 			   FALSE, FALSE, 5);
 	gtk_box_pack_start(GTK_BOX(page[2].widget), GTK_WIDGET(song_entry),
--- gingerblue-6.2.0/src/gingerblue-main-loop.c.orig	2022-09-02 17:30:30.000000000 +0200
+++ gingerblue-6.2.0/src/gingerblue-main-loop.c	2025-08-30 09:44:29.450248759 +0200
@@ -19,6 +19,6 @@ extern GtkWidget *studio_entry;
 GtkWidget *gingerblue_main_loop (GingerblueData *gingerblue) {
 	GingerblueData *Gingerblue = gingerblue;
 	Gingerblue->window = main_studio_config (gtk_entry_get_text(GTK_ENTRY(studio_entry)), gtk_entry_get_text(GTK_ENTRY(computer_entry)));
-	gtk_window_set_title (Gingerblue->window, g_strconcat(gtk_entry_get_text(GTK_ENTRY(computer_entry)), " on ", gtk_entry_get_text(GTK_ENTRY(studio_entry)), NULL));
+	gtk_window_set_title (GTK_WINDOW (Gingerblue->window), g_strconcat(gtk_entry_get_text(GTK_ENTRY(computer_entry)), " on ", gtk_entry_get_text(GTK_ENTRY(studio_entry)), NULL));
         gtk_widget_show_all (Gingerblue->window);
 }
--- gingerblue-6.2.0/src/gingerblue-studio-config.c.orig	2022-09-02 17:30:30.000000000 +0200
+++ gingerblue-6.2.0/src/gingerblue-studio-config.c	2025-08-30 09:46:11.947547906 +0200
@@ -21,13 +21,13 @@ GtkWidget *main_studio_config (gchar *lo
        GtkWidget *StudioLabel;
        Computer = gtk_list_box_row_new();
        StudioLabel = gtk_label_new (location_data);
-       Locations = gtk_box_new (ATK_STATE_VERTICAL, 1);
-       Location = gtk_list_box_new ();
-       gtk_container_add (GTK_CONTAINER (Computer), Locations);
+       Locations = GTK_VBOX (gtk_box_new (ATK_STATE_VERTICAL, 1));
+       Location = GTK_LIST_BOX (gtk_list_box_new ());
+       gtk_container_add (GTK_CONTAINER (Computer), GTK_WIDGET (Locations));
        gtk_box_pack_start (GTK_BOX (Location), StudioLabel, TRUE, TRUE, 0);
-       gtk_container_add (GTK_CONTAINER (Location), GTK_LIST_BOX (Computer));
-       gtk_container_add (GTK_CONTAINER (Container), GTK_BOX (Locations));
-       gtk_container_add (GTK_CONTAINER (Container), GTK_LIST_BOX (Location));
+       gtk_container_add (GTK_CONTAINER (Location), GTK_WIDGET (Computer));
+       gtk_container_add (GTK_CONTAINER (Container), GTK_WIDGET (Locations));
+       gtk_container_add (GTK_CONTAINER (Container), GTK_WIDGET (Location));
        gtk_widget_show_all (GTK_WIDGET (Container));
        return (GtkWidget *) Gingerblue;
 }
--- gingerblue-6.2.0/src/gingerblue-studio-player.c.orig	2022-09-02 17:30:30.000000000 +0200
+++ gingerblue-6.2.0/src/gingerblue-studio-player.c	2025-08-30 10:26:37.912524722 +0200
@@ -51,7 +51,7 @@ GST_DEBUG_CATEGORY (play_debug);
 
 extern GingerblueData *Gingerblue;
 extern GtkWidget *recording_entry;
-extern GstPlay *player;
+extern GstPlayer *player;
 #if 0
 static gboolean play_next (GstPlay * play);
 static gboolean play_prev (GstPlay * play);
@@ -753,9 +753,9 @@ void gingerblue_studio_player_play (GtkW
 	player = gst_player_new (NULL, gst_player_g_main_context_signal_dispatcher_new(NULL));
 	/* g_object_set_data(G_OBJECT(widget), "station_uri", g_value_get_string(&value)); */
 	if (!g_strcmp0(gtk_entry_get_text(GTK_ENTRY(recording_entry)), NULL)) {
-	        gingerblue_studio_player_new(player, recording_entry);
+	        gingerblue_studio_player_new(player, gtk_entry_get_text(GTK_ENTRY(recording_entry)));
 	} else {
-	        gingerblue_studio_player_new(player, recording_entry);
+	        gingerblue_studio_player_new(player, gtk_entry_get_text(GTK_ENTRY(recording_entry)));
 	}
 	gst_player_play(player);
 	return;
--- gingerblue-6.2.0/src/gingerblue-studio-location.c.orig	2022-09-02 17:30:30.000000000 +0200
+++ gingerblue-6.2.0/src/gingerblue-studio-location.c	2025-08-30 15:11:23.731231698 +0200
@@ -191,7 +191,7 @@ gchar *studio_location_navigate (Champla
         GTimeVal tv = { 0 };
 	gclue_simple_new ("gingerblue",
 			  accuracy_level,
-			  time_threshold,
+			  NULL,
 			  on_simple_ready,
 			  CHAMPLAIN_VIEW (view));
 	gtk_entry_set_text (GTK_ENTRY(data), print_location (simple, NULL));
--- gingerblue-6.2.0/src/gingerblue-studio-stream.c.orig	2022-09-02 17:30:30.000000000 +0200
+++ gingerblue-6.2.0/src/gingerblue-studio-stream.c	2025-08-30 10:07:57.752274110 +0200
@@ -12,6 +12,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <sys/file.h>
+#include <glib/gprintf.h>
 #include <gtk/gtk.h>
 #include <gst/gst.h>
 #include <gobject/glib-types.h>
@@ -82,15 +83,15 @@ int main_studio_stream (gchar *location_
 		printf("Connected to server...\n");
 		total = 0;
 		FILE *studio_stream_fp = fopen((char *)gtk_entry_get_text(GTK_ENTRY(recording_entry)), "r+");
-		flock(studio_stream_fp, LOCK_SH);
+		flock(fileno(studio_stream_fp), LOCK_SH);
 		while (1) {
-			g_print(stderr, "FILENAME %s\n", (char *)gtk_entry_get_text(GTK_ENTRY(recording_entry)));
+			g_fprintf(stderr, "FILENAME %s\n", (char *)gtk_entry_get_text(GTK_ENTRY(recording_entry)));
 			total = fseek((FILE *)studio_stream_fp, 0, SEEK_CUR);
 			read = fread(buff, 1, sizeof(buff), studio_stream_fp);
 			total = total + read;
-			g_print(stderr, "%li of %li\n", read, total);
+			g_fprintf(stderr, "%li of %li\n", read, total);
 			if (read > 0) {
-			        g_print(stderr, "%li\n", read);
+			        g_fprintf(stderr, "%li\n", read);
 			        ret = shout_send(shout, buff, read);
 				if (ret != SHOUTERR_SUCCESS) {
 				        printf("DEBUG: Send error: %s\n", shout_get_error(shout));
